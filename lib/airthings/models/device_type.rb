# frozen_string_literal: true

# #Airthings API
#
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
# The version of the OpenAPI document: v1
#
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 6.2.0
#

require "date"
require "time"

module Airthings
  class DeviceType
    WAVE = "WAVE"
    WAVE_MIST = "WAVE_MIST"
    WAVE_GEN2 = "WAVE_GEN2"
    WAVE_MINI = "WAVE_MINI"
    WAVE_PLUS = "WAVE_PLUS"
    WAVE_CO2 = "WAVE_CO2"
    VIEW_PLUS = "VIEW_PLUS"
    VIEW_PLUS_BUSINESS = "VIEW_PLUS_BUSINESS"
    VIEW_POLLUTION = "VIEW_POLLUTION"
    VIEW_RADON = "VIEW_RADON"
    VIEW_CO2 = "VIEW_CO2"
    SPACE_CO2_MINI = "SPACE_CO2_MINI"
    WAVE_ENHANCE = "WAVE_ENHANCE"
    HUB = "HUB"
    HOME = "HOME"
    PRO = "PRO"
    CLOUDBERRY = "CLOUDBERRY"
    AIRTIGHT = "AIRTIGHT"
    AGGREGATED_GROUP = "AGGREGATED_GROUP"
    ZONE_GROUP = "ZONE_GROUP"
    BALANCE_CONTROL = "BALANCE_CONTROL"
    INLET_AIR_CONTROL = "INLET_AIR_CONTROL"
    VENT_CONTROLLER = "VENT_CONTROLLER"
    AIRLY = "AIRLY"
    AIRLY_NO2 = "AIRLY_NO2"
    AIRLY_CO = "AIRLY_CO"
    AIRLY_NO = "AIRLY_NO"
    BREEZOMETER_WEATHER = "BREEZOMETER_WEATHER"
    BACNET = "BACNET"
    UNKNOWN = "UNKNOWN"

    def self.all_vars
      @all_vars ||= [WAVE, WAVE_MIST, WAVE_GEN2, WAVE_MINI, WAVE_PLUS, WAVE_CO2, VIEW_PLUS, VIEW_PLUS_BUSINESS, VIEW_POLLUTION, VIEW_RADON, VIEW_CO2, SPACE_CO2_MINI, WAVE_ENHANCE, HUB, HOME, PRO, CLOUDBERRY, AIRTIGHT, AGGREGATED_GROUP, ZONE_GROUP, BALANCE_CONTROL, INLET_AIR_CONTROL, VENT_CONTROLLER, AIRLY, AIRLY_NO2, AIRLY_CO, AIRLY_NO, BREEZOMETER_WEATHER, BACNET, UNKNOWN].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if DeviceType.all_vars.include?(value)

      raise "Invalid ENUM value #{value} for class #DeviceType"
    end
  end
end
